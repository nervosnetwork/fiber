meta {
  name: add tlc from NODE1
  type: http
  seq: 8
}

post {
  url: {{NODE1_RPC_URL}}
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}

body:json {
  {
    "id": "42",
    "jsonrpc": "2.0",
    "method": "add_tlc",
    "params": [
      {
        "channel_id": "{{CHANNEL_ID}}",
        "amount": "0xbebc200",
        "payment_hash": "0xcb7bce98a778f130d34da522623d7e56705bddfe0dc4781bd2331211134a19a8",
        "expiry": "{{expiry}}"
      }
    ]
  }
}

assert {
  res.body.error: isDefined
  res.body.result: isUndefined
}

script:pre-request {
  await new Promise(r => setTimeout(r, 2000));
  let expiry = "0x" + (Date.now() + 1000 * 60 * 60 * 24).toString(16);
  bru.setVar("expiry", expiry);
}

script:post-response {
  // Sleep for sometime to make sure current operation finishes before next request starts.
  await new Promise(r => setTimeout(r, 100));
  if (res.body.error.message != "TemporaryChannelFailure") {
    throw new Error("Assertion failed: error message is not right");
  }

  // Node 1 only holds 62 CKB as reserved amount, there is no extra amount for TLC, so the request will fail.
  // Set the TLC ID into a wrong one, than step 14 will fail as expected.
  bru.setVar("TLC_ID2", "0x3200");
}
