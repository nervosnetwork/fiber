meta {
  name: Node1 open a invalid channel to Node3
  type: http
  seq: 10
}

post {
  url: {{NODE1_RPC_URL}}
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}


body:json {
  {
    "id": "42",
    "jsonrpc": "2.0",
    "method": "open_channel",
    "params": [
      {
        "peer_id": "{{NODE2_PEERID}}",
          "funding_amount": "0x4b0",
          "funding_udt_type_script": {
            "code_hash": "0xe1e354d6d643ad42724d40967e334984534e0367405c5ae42a9d7d63d77df410",
            "hash_type": "data1",
            "args": "{{UDT_SCRIPT_ARGS}}"
          }
      }
    ]
  }
}

assert {
  res.body.error: isDefined
  res.body.result: isUndefined
}

script:post-response {
  // Sleep for sometime to make sure current operation finishes before next request starts.
  // will get error message since channel is closed in previous step
  await new Promise(r => setTimeout(r, 100));
  if (!(res.body.error.message === "Invalid parameter: Invalid UDT type script")) {
    throw new Error("Assertion failed: error message is not right");
  }
}
