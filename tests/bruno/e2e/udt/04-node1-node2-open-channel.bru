meta {
  name: Node1 open a channel to Node2, make funding_amount is larger to check overflow issue
  type: http
  seq: 4
}

post {
  url: {{NODE1_RPC_URL}}
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}


body:json {
  {
    "id": "42",
    "jsonrpc": "2.0",
    "method": "open_channel",
    "params": [
      {
        "peer_id": "{{NODE2_PEERID}}",
          "funding_amount": "0xfffffffffffffffffffffffffffff",
          "funding_udt_type_script": {
            "code_hash": "{{UDT_CODE_HASH}}",
            "hash_type": "data1",
            "args": "{{UDT_SCRIPT_ARGS}}"
          }
      }
    ]
  }
}

assert {
  res.body.error: isUndefined
  res.body.result.temporary_channel_id: isDefined
}

script:post-response {
  await new Promise(r => setTimeout(r, 1000));
  console.log("N1N2 response: ", res.body);
  console.log("N1N2 response: ", res.body.result.temporary_channel_id);
  bru.setVar("N1N2_TEMP_CHANNEL_ID", res.body.result.temporary_channel_id);
}
